# Merge-Request Pipeline
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_PROJECT_URL != "https://gitlab.com/nitk-nest/nest"
      when: never
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


default:
  tags:
    - nest
  image: docker:20.10.3

stages:
  - build
  - test
  - release

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:master
  DOCKER_TLS_CERTDIR: "/certs"

# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#making-docker-in-docker-builds-faster-with-docker-layer-caching
build docker:
  tags:
    - dind-runner
  services:
    - docker:20.10.3-dind
  stage: build
  script:
    - docker login -u $CI_DEPLOY_USERNAME -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_RELEASE_IMAGE || true
    - docker build --cache-from $CONTAINER_RELEASE_IMAGE -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

run style check:
  image: $CONTAINER_TEST_IMAGE
  stage: test
  script:
    - pre-commit --version
    - pre-commit run --all-files

    - gitlint --version
    - git fetch
    - gitlint --commits origin/$CI_DEFAULT_BRANCH..HEAD
  needs: [build docker]

run unit tests:
  image: $CONTAINER_TEST_IMAGE
  stage: test
  script:
    - pip install .
    - coverage --version
    - coverage run --source nest -m unittest -v
    - coverage report
    - coverage xml
  artifacts:
    reports:
      cobertura: coverage.xml
    paths:
      - test-experiment*/
      - quagga-logs*/
      - frr-logs*/
  needs: [build docker]

test docs:
  image: $CONTAINER_TEST_IMAGE
  stage: test
  script:
    - git fetch --tags
    - pip install .
    - pip install -r docs/doc_requirements.txt
    - make -C docs multiversion
    # Create index.html file pointing to latest release docs
    - TAG=$(git tag | tail -1)
    - echo "<meta http-equiv=\"refresh\" content=\"0; URL=./$TAG/index.html\">" > docs/build/html/index.html
  rules:
    - changes:
        - docs/**/*
  artifacts:
    paths:
      - docs/build
  needs: [build docker]

release docs:
  stage: release
  tags:
    - nest-website
  script:
    - cp -rv docs/build/html/* /var/www/html/nest-docs/docs
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - docs/**/*
  needs: [test docs]

upload to PyPI:
  image: $CONTAINER_TEST_IMAGE
  stage: release
  script:
    - pip install -U twine setuptools wheel
    - python setup.py sdist bdist_wheel
    - twine upload dist/* --verbose
  rules:
    - if: $CI_COMMIT_TAG
  needs: [run style check, run unit tests]

push docker:
  tags:
    - dind-runner
  services:
    - docker:dind
  stage: release
  script:
   - docker login -u $CI_DEPLOY_USERNAME -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
   - docker pull $CONTAINER_TEST_IMAGE
   - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
   - docker push $CONTAINER_RELEASE_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - "Dockerfile"
  needs: [build docker]
